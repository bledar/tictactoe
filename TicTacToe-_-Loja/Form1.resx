<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAACMuAAAjLgAAAAAAAAAA
        AABeVcdFSctKSslKSsk/SM9iTr6jWJueV52cV56cV56cV56cV56cV56cV56cV56cV56cV56cV56cV56c
        V56cV56cV56cV56cV56dVZ6pTKFcn5An0YY2wog2wogwxodPvJFMQsE7P8hAQMZAQMY1PsxaRLqeT5aZ
        TpiXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmYTJmkQpxTmoob
        z38rv4Irv4Ilw4E7tIVVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmXTpmXTpmXTpmXTpmX
        TpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZA
        QMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmXTpmXTpmUTJajVKWsWa+pWKyXTpmWTZiXTpmXTpmXTpmXTpmX
        TpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmX
        TpmXTpmfUqF1PHdaLVpkM2WWTZiaUJyXTpmXTpmXTpmXTpmXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FF
        uItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmXTpmYT5qvWrE3GzcAAAAJAwqYTpqfUqGX
        TpmXTpmXTpmXTpmXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZ
        TpiXTpmXTpmXTpmXTpmYT5qsWa5BIEEAAAAJBAmNSY+hU6SXTpmXTpmXTpmXTpmXTpmYTJmkQpxTmoob
        z38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmXTpmXTpmwWrJKJksA
        AAAAAACERYakVKeXTpmXTpmXTpmXTpmXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZA
        QMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmXTpmXTpmyW7RPKVAAAAABAQGHRomjVKaXTpmXTpmXTpmXTpmX
        TpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmX
        TpmXTpmxW7NNKE4AAAABAQGHRomjVKaXTpmXTpmXTpmXTpmXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FF
        uItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmXTpmXTpmxW7NNKE4AAAABAQGHRomjVKaX
        TpmXTpmXTpmXTpmXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZ
        TpiXTpmXTpmXTpmXTpmXTpmxW7NNKE4AAAABAQGJR4ujVKaXTpmXTpmXTpmXTpmXTpmYTJmkQpxTmoob
        z38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmXTpmXTpmxW7NLJ0wA
        AAAAAACBQ4OkVaeXTpmXTpmXTpmXTpmXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZA
        QMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmXTpmXTpmuWbBcL14AAAAAAAB6P3ymVqiXTpmXTpmXTpmXTpmX
        TpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmX
        TpmXTpmrWa1nM2gAAAAAAAB8QH6mVqiXTpmXTpmXTpmXTpmXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FF
        uItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmXTpmXTpmsWa5kMmUAAAAAAAB8QH6mVqiX
        TpmXTpmXTpmXTpmXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZ
        TpiXTpmXTpmXTpmXTpmXTpmsWa5kMmUAAAAAAAB8QH6mVqiXTpmXTpmXTpmXTpmXTpmYTJmkQpxTmoob
        z38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmaUJyaT5ywW7JoNGkA
        AAAAAACCQ4SsWa6fUqGgU6KYTpqWTpiXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZA
        QMY1PsxaRLqeT5aZTpiXTpmWTZiYT5qhU6OiVKS3X7lmM2cAAAAAAAB5PnuqWKyTS5WQSpKWTZiYTpqX
        TpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmhU6OKR4wm
        EyYiEiIlEyURCBEAAAAAAAASCRIdDx0TCRMbDRuQSZGgU6KXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FF
        uItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmmVqiERIYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACOSI+jVKWXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZ
        TpiXTpmlVaeFRIcAAAAAAAALBAwKBAoKBAoJAwkKBAoVChUWCxYgECCQSZGgUqKXTpmYTJmkQpxTmoob
        z38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmaT5yTTJV3PXh7P32LRo2KRoyJ
        RouIRYqKRoyUTJaVTJeVTJeXTpmXTpmXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZA
        QMY1PsxaRLqeT5aZTpiXTpmVTZeZT5upV6uoV6qiVKSiVKWjVKWjVaWiVKWfUqGfUqGeUqCYTpqWTpiX
        TpmYTJmkQpxTmoobz38rv4Irv4Ilw4FFuItVTMQ7P8hAQMZAQMY1PsxaRLqeT5aZTpiXTpmXTpmXTpmX
        TpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmXTpmYTJmkQpxTmoobz38rv4Irv4Ilw4FF
        uItXTMM6P8hAQMZAQMYzPs1eRbiuUY6oUJClUJKlUJKlUJKlUJKnUJGkUJKXTpmWTpmXTpmVUJmjQZys
        OZ2pO52pO52pO52pO52qOZ24LaBalIsY0n8rv4Irv4IkxIFItotOS8c+QMdAQMZAQMY7P8lMQsFrR7Bo
        RrFnRrJnRrJnRrJnRrJkRrNtR6+VTZqaT5eYTZmeSJpuepBTlYtcjIxcjIxcjIxcjIxci4xiho49roYk
        xoErv4Irv4IowYI8volISspBQMZAQMZAQMZCQMU8P8gwPc4xPs4xPs4xPs4xPs4xPs4pPNE9P8mTTZud
        T5WYTJmlQZtArIYG5XoY0n4Y0n4Y0n4Y0n4Y034W1X0kxYEuvIMrv4Irv4IsvoIzxIdKSslAQMZAQMZA
        QMZAQMZAQMZAQMZAQMZAQMZAQMZAQMZAQMY5P8lKQcKUTZucT5aYTJmjQ5tNnokbz38rv4Irv4Irv4Ir
        v4Irv4Irv4Irv4Irv4Irv4Irv4Irv4I2wohKSslAQMZAQMZAQMZAQMZAQMZAQMZAQMZAQMZAQMZAQMZA
        QMY5P8lKQcKUTZucT5aYTJmjQ5tNnokbz38rv4Irv4Irv4Irv4Irv4Irv4Irv4Irv4Irv4Irv4Irv4I2
        wogxPs4xPs4xPs4xPs4xPs4xPs4xPs4xPs4xPs4xPs4xPs4xPs4pPNE9P8mTTZudT5WYTJmjQ5tNnokb
        z38rv4Irv4Irv4Irv4Irv4Irv4Irv4Irv4Irv4Irv4Irv4Irv4J1WbttT7dtT7dtT7dtT7dtT7dtT7dt
        T7dtT7dtT7dtT7dtT7dpTrlzULWaVp+fWJydVZ6oTaBWo48n0YY2wog2wog2wog2wog2wog2wog2wog2
        wog2wog2wog2wohBxo8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>